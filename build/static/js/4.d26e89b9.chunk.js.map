{"version":3,"sources":["components/Spinner/Spinner.styled.module.css","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.jsx","redux/contacts/contacts-operations.js","components/ContactListItem/ContactListItem.jsx","components/ContactsList/ContactsList.jsx","components/Filter/Filter.jsx","components/Spinner/Spinner.jsx","views/ContactsView.js","components/ContactForm/ContactForm.module.css","components/ContactListItem/ContactListItem.module.css","components/ContactsList/ContactsList.module.css","components/Filter/Filter.module.css","components/App.module.css"],"names":["module","exports","getContacts","state","contacts","items","getFilter","filter","getLoading","loading","getVisibleContacts","normalizedFilter","toLowerCase","item","name","includes","ContactForm","number","handleChange","event","setState","target","value","handleSubmit","preventDefault","console","log","oldContactName","props","find","contact","oldContactNumber","alert","onSubmit","this","className","styles","contactForm","htmlFor","label","type","contactInput","placeholder","onChange","btn","Component","mapDispatchToProps","dispatch","a","addContactRequest","axios","post","data","addContactSuccess","addContactError","message","connect","ContactListItem","id","handleRemove","contactListItem","onClick","btnRemove","removeContactRequest","delete","removeContactSuccess","removeContactError","map","changeFilter","inputFilter","Spinner","spinner","visible","color","height","width","timeout","ContactsView","fecthContacts","container","length","fecthContactsRequest","get","fecthContactsSuccess","fecthContactsError"],"mappings":"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","file":"static/js/4.d26e89b9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Spinner_styled_spinner__wEcea\"};","const getContacts = (state) => state.contacts.items;\r\nconst getFilter = (state) => state.contacts.filter;\r\nconst getLoading = (state) => state.contacts.loading;\r\n\r\nconst getVisibleContacts = (state) => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  const normalizedFilter = filter.toLowerCase();\r\n  return contacts.filter((item) =>\r\n    item.name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n};\r\n\r\nexport { getContacts, getFilter, getVisibleContacts, getLoading };\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addContact } from \"../../redux/contacts/contacts-operations\";\r\nimport { getContacts } from \"../../redux/contacts/contacts-selectors\";\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(this.state.name, this.state.number);\r\n\r\n    const oldContactName = this.props.contacts.find(\r\n      (contact) => contact.name === this.state.name\r\n    );\r\n\r\n    const oldContactNumber = this.props.contacts.find(\r\n      (contact) => contact.number === this.state.number\r\n    );\r\n\r\n    if (oldContactName) {\r\n      alert(\r\n        `This contact NAME already exists\r\n         as Name:${oldContactName.name} Tel:${oldContactName.number}`\r\n      );\r\n      return;\r\n    } else if (oldContactNumber) {\r\n      alert(\r\n        `This contact NUMBER already exists as\r\n         Tel:${oldContactNumber.number} Name:${oldContactNumber.name}`\r\n      );\r\n      return;\r\n    } else if (!this.state.name) {\r\n      alert(\"Please, enter the contact name\");\r\n      return;\r\n    } else if (!this.state.number) {\r\n      alert(\"Please, enter the contact number\");\r\n      return;\r\n    }\r\n\r\n    this.props.onSubmit({\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    });\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={styles.contactForm}>\r\n        <label htmlFor=\"name\" className={styles.label}>\r\n          Name\r\n          <input\r\n            name=\"name\"\r\n            type=\"text\"\r\n            className={styles.contactInput}\r\n            placeholder=\"insert name\"\r\n            onChange={this.handleChange}\r\n            value={this.state.name}\r\n          />\r\n        </label>\r\n        <label htmlFor=\"number\" className={styles.label}>\r\n          Number\r\n          <input\r\n            name=\"number\"\r\n            type=\"text\"\r\n            className={styles.contactInput}\r\n            placeholder=\"insert number\"\r\n            onChange={this.handleChange}\r\n            value={this.state.number}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\" className={styles.btn}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onSubmit: addContact,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: getContacts(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import axios from \"axios\";\r\n\r\nimport {\r\n  addContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  fecthContactsError,\r\n  fecthContactsRequest,\r\n  fecthContactsSuccess,\r\n  removeContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n} from \"./contacts-actions.js\";\r\n\r\n// axios.defaults.baseURL = \"http://localhost:3004\";\r\n\r\nconst fecthContacts = () => async (dispatch) => {\r\n  dispatch(fecthContactsRequest());\r\n  try {\r\n    const { data } = await axios.get(\"/contacts\");\r\n    console.log(data);\r\n    dispatch(fecthContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fecthContactsError(error.message));\r\n  }\r\n};\r\n\r\nconst addContact = ({ name, number }) => async (dispatch) => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n\r\n  console.log(contact);\r\n\r\n  dispatch(addContactRequest());\r\n  try {\r\n    const { data } = await axios.post(\"/contacts\", contact);\r\n    console.log(data);\r\n    dispatch(addContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(addContactError(error.message));\r\n  }\r\n};\r\n\r\nconst removeContact = (id) => async (dispatch) => {\r\n  dispatch(removeContactRequest());\r\n  try {\r\n    await axios.delete(`/contacts/${id}`);\r\n    dispatch(removeContactSuccess(id));\r\n  } catch (error) {\r\n    dispatch(removeContactError(error.message));\r\n  }\r\n};\r\n\r\nexport { fecthContacts, removeContact, addContact };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactListItem.module.css';\r\n\r\n\r\n\r\nconst ContactListItem = ({ id, name, number, handleRemove }) => {\r\n  \r\n  \r\n    return (\r\n        <li className={styles.contactListItem}>\r\n            <span className=\"contactName\">{name}</span> \r\n            <span className=\"contactNumber\"> {number}</span>\r\n             <button onClick={() =>\r\n               handleRemove(id)}\r\n               className={styles.btnRemove}>Delete</button>\r\n      </li>\r\n    )\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.number.isRequired,\r\n  handleRemove: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ContactListItem;\r\n","import PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\r\nimport styles from \"./ContactsList.module.css\";\r\nimport { removeContact } from \"../../redux/contacts/contacts-operations\";\r\n\r\nconst ContactsList = ({ contacts, handleRemove }) => {\r\n  // if (!contacts.length) {\r\n  //   return <p className={styles.message}>Phonebook is empty!</p>;\r\n  // }\r\n  return (\r\n    <ul className=\"contactsList\">\r\n      {contacts.map(({ name, number, id }) => (\r\n        <ContactListItem\r\n          key={id}\r\n          id={id}\r\n          name={name}\r\n          number={number}\r\n          handleRemove={handleRemove}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  handleRemove: removeContact,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactsList);\r\n\r\nContactsList.propTypes = {\r\n  visibleContacts: PropTypes.array.isRequired,\r\n  handleRemove: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeFilter } from \"../../redux/contacts/contacts-actions\";\r\nimport { getFilter } from \"../../redux//contacts/contacts-selectors\";\r\n\r\nconst Filter = ({ filter, handleChange }) => {\r\n  return (\r\n    <label className={styles.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={styles.inputFilter}\r\n        name=\"filter\"\r\n        type=\"text\"\r\n        placeholder=\"search contact\"\r\n        onChange={handleChange}\r\n        value={filter}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  filter: getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  handleChange: (event) => dispatch(changeFilter(event.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport styles from \"./Spinner.styled.module.css\";\r\n\r\nconst Spinner = ({ loading }) => {\r\n  return (\r\n    <Loader\r\n      className={styles.spinner}\r\n      visible={loading}\r\n      type=\"ThreeDots\"\r\n      color=\"white\"\r\n      height={80}\r\n      width={80}\r\n      timeout={1800}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ContactForm from \"../components/ContactForm\";\r\nimport ContactsList from \"../components/ContactsList\";\r\nimport Filter from \"../components/Filter/Filter\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport styles from \"../components/App.module.css\";\r\nimport { fecthContacts } from \"../redux/contacts/contacts-operations\";\r\nimport {\r\n  getVisibleContacts,\r\n  getLoading,\r\n} from \"../redux/contacts/contacts-selectors\";\r\nimport Spinner from \"../components/Spinner/Spinner\";\r\n\r\nclass ContactsView extends Component {\r\n  componentDidMount() {\r\n    this.props.fecthContacts();\r\n  }\r\n\r\n  render() {\r\n    const { contacts, loading } = this.props;\r\n    return (\r\n      <div className={styles.container}>\r\n        <h1 className=\"titlePhonebook\">Phonebook</h1>\r\n        <ContactForm />\r\n        <h2 className=\"title\">Contacts list</h2>\r\n        {!!contacts.length && <Filter />}\r\n        <ContactsList contacts={this.props.contacts} />\r\n        <Spinner loading={loading} />\r\n        {/* {!contacts.length && (\r\n            <p className={styles.message}>Phonebook is empty!</p>\r\n          )} */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: getVisibleContacts(state),\r\n    loading: getLoading(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fecthContacts,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsView);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__150xc\",\"label\":\"ContactForm_label__2gpFP\",\"contactInput\":\"ContactForm_contactInput__2MLNL\",\"btn\":\"ContactForm_btn__1nM5V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnRemove\":\"ContactListItem_btnRemove__234gb\",\"contactListItem\":\"ContactListItem_contactListItem__2iFaZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactsList_contactList__eV1Kl\",\"message\":\"ContactsList_message__24IMA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1vSV0\",\"inputFilter\":\"Filter_inputFilter__2XhuF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__30QSs\",\"root\":\"App_root__2LaLo\"};"],"sourceRoot":""}