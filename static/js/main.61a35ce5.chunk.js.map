{"version":3,"sources":["redux/auth/auth-operations.js","redux/auth/auth-actions.js","redux/contacts/contacts-actions.js","redux/auth/auth-selectors.js","components/Navigation/Navigation.js","images/default-img.png","components/UserMenu/UserMenu.jsx","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","routes/PrivateRoute.jsx","routes/PublicRoute.jsx","App.jsx","redux/contacts/contacts-reducer.js","redux/auth/auth-reducer.js","redux/store.js","index.js"],"names":["axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","dispatch","a","registerRequest","post","response","data","registerSuccess","registerError","message","logIn","loginRequest","loginSuccess","loginError","logOut","logoutRequest","logoutSuccess","logoutError","getCurrentUser","getState","persistedToken","auth","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","createAction","changeFilter","fecthContactsRequest","fecthContactsSuccess","fecthContactsError","addContactRequest","addContactSuccess","addContactError","removeContactRequest","removeContactSuccess","removeContactError","setError","resetError","getIsAuthenticated","state","isAuthenticated","getUserName","user","name","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","connect","exact","to","style","activeStyle","container","alignItems","avatar","marginRight","mapDispatchToProps","onLogout","defaultAvatar","src","alt","width","type","onClick","AuthNav","header","justifyContent","backgroundColor","boxShadow","Component","component","redirectTo","routeProps","render","props","restricted","HomeView","lazy","ContactsView","RegisterView","LoginView","App","this","onGetCurrentUser","fallback","path","items","createReducer","_","payload","filter","item","id","loading","error","combineReducers","initialUserState","email","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.61a35ce5.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  loginError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  registerError,\r\n  registerRequest,\r\n  registerSuccess,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} from \"./auth-actions\";\r\n\r\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com\";\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = \"\";\r\n  },\r\n};\r\n\r\nconst register = (credentials) => async (dispatch) => {\r\n  dispatch(registerRequest());\r\n  try {\r\n    const response = await axios.post(\"/users/signup\", credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(registerError(error.message));\r\n  }\r\n};\r\n\r\nconst logIn = (credentials) => async (dispatch) => {\r\n  dispatch(loginRequest());\r\n\r\n  try {\r\n    const response = await axios.post(\"/users/login\", credentials);\r\n    token.set(response.data.token);\r\n    dispatch(loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(loginError(error.message));\r\n  }\r\n};\r\n\r\nconst logOut = () => async (dispatch) => {\r\n  dispatch(logoutRequest());\r\n  try {\r\n    await axios.post(\"/users/logout\");\r\n\r\n    token.unset();\r\n    dispatch(logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(logoutError(error.message));\r\n  }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n\r\n  dispatch(getCurrentUserRequest());\r\n  try {\r\n    const response = await axios.get(\"/users/current\");\r\n    dispatch(getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\nexport { register, logIn, logOut, getCurrentUser };\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst registerRequest = createAction(\"auth/registerRequest\");\r\nconst registerSuccess = createAction(\"auth/registerSuccess\");\r\nconst registerError = createAction(\"auth/registerError\");\r\n\r\nconst loginRequest = createAction(\"auth/loginRequest\");\r\nconst loginSuccess = createAction(\"auth/loginSuccess\");\r\nconst loginError = createAction(\"auth/loginError\");\r\n\r\nconst logoutRequest = createAction(\"auth/logoutRequest\");\r\nconst logoutSuccess = createAction(\"auth/logoutSuccess\");\r\nconst logoutError = createAction(\"auth/logoutError\");\r\n\r\nconst getCurrentUserRequest = createAction(\"auth/getCurrentUserRequest\");\r\nconst getCurrentUserSuccess = createAction(\"auth/getCurrentUserSuccess\");\r\nconst getCurrentUserError = createAction(\"auth/getCurrentUserError\");\r\n\r\nexport {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst removeContact = createAction(\"contacts/remove-contact\");\r\nconst changeFilter = createAction(\"contacts/change-filter\");\r\n\r\n// fecth contacts from data-base\r\nconst fecthContactsRequest = createAction(\"contacts/fecth-contacts\");\r\nconst fecthContactsSuccess = createAction(\"contacts/fecth-contacts-success\");\r\nconst fecthContactsError = createAction(\"contacts/fecth-contacts-failure\");\r\n//add new contact\r\nconst addContactRequest = createAction(\"contacts/add-contacts\");\r\nconst addContactSuccess = createAction(\"contacts/add-contacts-success\");\r\nconst addContactError = createAction(\"contacts/add-contacts-failure\");\r\n// remove contact\r\nconst removeContactRequest = createAction(\"contacts/delete-contact-request\");\r\nconst removeContactSuccess = createAction(\"contacts/delete-contact-success\");\r\nconst removeContactError = createAction(\"contacts/delete-contact-error\");\r\n// errors\r\n\r\nconst setError = createAction(\"contacts/setError\");\r\nconst resetError = createAction(\"contacts/resetError\");\r\n\r\nexport {\r\n  changeFilter,\r\n  removeContact,\r\n  fecthContactsRequest,\r\n  fecthContactsSuccess,\r\n  fecthContactsError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n  addContactRequest,\r\n  addContactError,\r\n  addContactSuccess,\r\n  setError,\r\n  resetError,\r\n};\r\n","const getIsAuthenticated = (state) => state.auth.isAuthenticated;\r\nconst getUserName = (state) => state.auth.user.name;\r\n\r\nexport { getIsAuthenticated, getUserName };\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { getIsAuthenticated } from \"../../redux/auth/auth-selectors\";\r\n\r\nconst styles = {\r\n  link: {\r\n    display: \"inline-block\",\r\n    textDecoration: \"none\",\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: \"black\",\r\n  },\r\n  activeLink: {\r\n    color: \" rgb(255,64,71)\",\r\n  },\r\n};\r\n\r\nconst Navigation = ({ isAuthenticated }) => (\r\n  <nav>\r\n    <NavLink exact to=\"/\" style={styles.link} activeStyle={styles.activeLink}>\r\n      Home\r\n    </NavLink>\r\n    {isAuthenticated && (\r\n      <NavLink\r\n        to=\"/contacts\"\r\n        exact\r\n        style={styles.link}\r\n        activeStyle={styles.activeLink}\r\n      >\r\n        My Contacts\r\n      </NavLink>\r\n    )}\r\n  </nav>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navigation);\r\n","export default __webpack_public_path__ + \"static/media/default-img.0d84afb7.png\";","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUserName } from \"../../redux/auth/auth-selectors\";\r\nimport defaultAvatar from \"../../images/default-img.png\";\r\nimport { logOut } from \"../../redux/auth/auth-operations\";\r\n\r\nconst styles = {\r\n  container: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    marginRight: 4,\r\n  },\r\n  name: {\r\n    fontWeight: 700,\r\n    marginRight: 12,\r\n  },\r\n};\r\n\r\nconst UserMenu = ({ avatar, name, onLogout }) => (\r\n  <div style={styles.container}>\r\n    <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} />\r\n    <span style={styles.name}>Welcome, {name}</span>\r\n    <button type=\"button\" onClick={onLogout}>\r\n      Logout\r\n    </button>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  name: getUserName(state),\r\n  avatar: defaultAvatar,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onLogout: logOut,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst styles = {\r\n  link: {\r\n    display: \"inline-block\",\r\n    textDecoration: \"none\",\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: \"black\",\r\n  },\r\n  activeLink: {\r\n    color: \"rgb(255,64,71)\",\r\n  },\r\n};\r\n\r\nconst AuthNav = () => (\r\n  <div>\r\n    <NavLink\r\n      to=\"/register\"\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Register\r\n    </NavLink>\r\n    <NavLink\r\n      to=\"/login\"\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Log in\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;\r\n","import React from \"react\";\r\nimport Navigation from \"../Navigation/Navigation\";\r\nimport UserMenu from \"../UserMenu\";\r\nimport AuthNav from \"../AuthNav/AuthNav\";\r\nimport { connect } from \"react-redux\";\r\nimport { getIsAuthenticated } from \"../../redux/auth/auth-selectors\";\r\n\r\nconst styles = {\r\n  header: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"rgb(255,210,81)\",\r\n    boxShadow:\r\n      \"box-shadow: 0px 10px 13px -7px #000000, 5px 5px 15px 5px rgba(254,63,71,0.2)\",\r\n  },\r\n};\r\n\r\nconst AppBar = ({ isAuthenticated }) => (\r\n  <header style={styles.header}>\r\n    <Navigation />\r\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n  </header>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppBar);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { getIsAuthenticated } from \"../redux/auth/auth-selectors\";\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={(props) =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { getIsAuthenticated } from \"../redux/auth/auth-selectors\";\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={(props) =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React, { Component, Suspense, lazy } from \"react\";\nimport AppBar from \"./components/AppBar/AppBar\";\nimport { Switch } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getCurrentUser } from \"../src/redux/auth/auth-operations\";\nimport PrivateRoute from \"./routes/PrivateRoute\";\nimport PublicRoute from \"./routes/PublicRoute\";\n\nconst HomeView = lazy(() => import(\"../src/views/HomeView\"));\nconst ContactsView = lazy(() => import(\"../src/views/ContactsView\"));\nconst RegisterView = lazy(() => import(\"../src/views/RegisterView\"));\nconst LoginView = lazy(() => import(\"../src/views/LoginView\"));\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n  render() {\n    return (\n      <>\n        <AppBar />\n        <Suspense fallback={<p>Loading...</p>}>\n          <Switch>\n            <PublicRoute exact path=\"/\" component={HomeView} />\n            <PublicRoute\n              path=\"/register\"\n              component={RegisterView}\n              restricted\n              redirectTo=\"/contacts\"\n            />\n            <PublicRoute\n              path=\"/login\"\n              component={LoginView}\n              restricted\n              redirectTo=\"/contacts\"\n            />\n            <PrivateRoute\n              path=\"/contacts\"\n              component={ContactsView}\n              redirectTo=\"/login\"\n            />\n          </Switch>\n        </Suspense>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: getCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  changeFilter,\r\n  fecthContactsRequest,\r\n  fecthContactsSuccess,\r\n  fecthContactsError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n  addContactRequest,\r\n  addContactError,\r\n  addContactSuccess,\r\n  setError,\r\n  resetError,\r\n} from \"./contacts-actions\";\r\n\r\nconst items = createReducer([], {\r\n  [fecthContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [removeContactSuccess]: (state, { payload }) =>\r\n    state.filter((item) => item.id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fecthContactsRequest]: () => true,\r\n  [fecthContactsSuccess]: () => false,\r\n  [fecthContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [removeContactRequest]: () => true,\r\n  [removeContactSuccess]: () => false,\r\n  [removeContactError]: () => false,\r\n});\r\n\r\nconst error = createReducer(\"\", {\r\n  [setError]: (_, { payload }) => payload,\r\n  [resetError]: () => \"\",\r\n});\r\n\r\nexport default combineReducers({ items, filter, loading, error });\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  loginError,\r\n  loginSuccess,\r\n  registerError,\r\n  registerSuccess,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} from \"./auth-actions\";\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [registerSuccess]: (_, { payload }) => payload.user,\r\n  [loginSuccess]: (_, { payload }) => payload.user,\r\n  [logoutSuccess]: () => initialUserState,\r\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [registerSuccess]: (_, { payload }) => payload.token,\r\n  [loginSuccess]: (_, { payload }) => payload.token,\r\n  [logoutSuccess]: () => null,\r\n});\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n  [registerError]: setError,\r\n  [loginError]: setError,\r\n  [logoutError]: setError,\r\n  [getCurrentUserError]: setError,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [registerSuccess]: () => true,\r\n  [loginSuccess]: () => true,\r\n  [getCurrentUserSuccess]: () => true,\r\n  [registerError]: () => false,\r\n  [loginError]: () => false,\r\n  [getCurrentUserError]: () => false,\r\n  [logoutSuccess]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  token,\r\n  error,\r\n  isAuthenticated,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\n\r\n// import logger from \"redux-logger\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport contactsReducer from \"./contacts/contacts-reducer\";\r\nimport authReducer from \"../redux/auth/auth-reducer\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  // logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: \"auth\",\r\n  storage,\r\n  whitelist: [\"token\"],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.jsx\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./redux/store\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}